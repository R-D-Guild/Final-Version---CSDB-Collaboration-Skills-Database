{"mappings":"AAAA,MAAM,iBAAiB,SAAS,cAAc,CAAC;AAC/C,MAAM,uBAAuB,SAAS,cAAc,CAAC;AACrD,MAAM,oBAAoB,SAAS,cAAc,CAAC;AAClD,MAAM,oBAAoB,SAAS,cAAc,CAAC;AAClD,MAAM,aAAa,SAAS,cAAc,CAAC;AAE3C,oCAAoC;AACpC,SAAS;IACL,kBAAkB,KAAK,CAAC,OAAO,GAAG;AACpC;AAEA,wCAAwC;AACxC,WAAW,gBAAgB,CAAC,SAAS;IACnC,kBAAkB,KAAK,CAAC,OAAO,GAAG;AACpC;AAEF,sCAAsC;AACtC,MAAM,sBAAsB,CAAC;IACzB,kBAAkB,WAAW,GAAG;IAChC,kBAAkB,SAAS,CAAC,GAAG,CAAC,SAAS;IACzC,kBAAkB,KAAK,CAAC,OAAO,GAAG;IAElC,WAAW;QACP,kBAAkB,KAAK,CAAC,OAAO,GAAG;QAClC,kBAAkB,SAAS,CAAC,MAAM,CAAC;IACrC,GAAG,OAAQ,YAAY;AAC7B;AAEA,kDAAkD;AAClD,MAAM,uBAAuB;IACzB,kBAAkB,KAAK,CAAC,OAAO,GAAG;IAClC,kBAAkB,SAAS,CAAC,MAAM,CAAC;AACvC;AAEA,eAAe,gBAAgB,CAAC,UAAU,OAAO;IAC7C,MAAM,cAAc;IAEpB,MAAM,QAAQ,qBAAqB,KAAK,CAAC,IAAI;IAC7C,MAAM,eAAe,SAAS,WAAW,IAAK,yBAAyB;IAEvE;IAEF,uBAAuB;IACvB,IAAG,CAAC,OAAM;QACR,oBAAoB;QACpB;IACF;IAEA,wBAAwB;IACxB,MAAM,gBAAgB,CAAC,QAAU,6BAA6B,IAAI,CAAC;IACnE,IAAG,CAAC,cAAc,QAAO;QACvB,oBAAoB;QACpB;IACF;IAEA,+BAA+B;IAC/B,IAAI,CAAC,cAAc;QACjB,oBAAoB;QACpB;IACF;IAGA,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,qBAAqB,CAAC,OAAO;YACjE;QACF;QAEA,IAAI,OAAO;YACT,oBAAoB,YAAY,MAAM,OAAO;YAC7C;QACF;QAEA,kBAAkB;QAElB,oDAAoD;QACpD;IAEF,EAAE,OAAO,OAAO;QACd,oBAAoB;IACtB;AACF","sources":["public/authForgotPass.js"],"sourcesContent":["const forgotPassForm = document.getElementById('forgotPassFormDetails');\r\nconst forgotPassEmailInput = document.getElementById('forgotPassEmail');\r\nconst forgotPassMessage = document.getElementById('forgotPassErrorMessage');\r\nconst confirmationPopup = document.getElementById('confirmationPopup');\r\nconst closePopup = document.getElementById('closePopup');\r\n\r\n// Show popup when the email is sent\r\nfunction showPopup() {\r\n    confirmationPopup.style.display = 'flex';\r\n  }\r\n  \r\n  // Close popup when the user clicks \"OK\"\r\n  closePopup.addEventListener('click', () => {\r\n    confirmationPopup.style.display = 'none';\r\n  });\r\n\r\n// Show error message and shake effect\r\nconst showForgotPassError = (message)=>{    \r\n    forgotPassMessage.textContent = message;\r\n    forgotPassMessage.classList.add('alert', 'shake');\r\n    forgotPassMessage.style.display = 'block';\r\n\r\n    setTimeout(() => {\r\n        forgotPassMessage.style.display = 'none';\r\n        forgotPassMessage.classList.remove('shake');\r\n      }, 5000);  // 5 seconds\r\n}\r\n\r\n// Clear error message when valid input is entered\r\nconst clearForgotPassError = ()=>{\r\n    forgotPassMessage.style.display = 'none';\r\n    forgotPassMessage.classList.remove('shake');\r\n}\r\n\r\nforgotPassForm.addEventListener('submit', async (event)=>{\r\n    event.preventDefault();\r\n\r\n    const email = forgotPassEmailInput.value.trim();\r\n    const captchaToken = hcaptcha.getResponse();  // Get the hCaptcha token\r\n\r\n    clearForgotPassError();\r\n    \r\n  // Validate email input\r\n  if(!email){\r\n    showForgotPassError('Please enter your email.')\r\n    return;\r\n  }\r\n\r\n  // Validate email format\r\n  const validateEmail = (email) => /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/.test(email);\r\n  if(!validateEmail(email)){\r\n    showForgotPassError('Please enter a valid email address.');\r\n    return;\r\n  }\r\n\r\n  // Ensure hCaptcha is completed\r\n  if (!captchaToken) {\r\n    showForgotPassError('Please complete the CAPTCHA.');\r\n    return;\r\n  }\r\n\r\n\r\n  try {\r\n    const { error } = await supabase.auth.resetPasswordForEmail(email, {\r\n      captchaToken,  // Send hCaptcha token\r\n    });\r\n\r\n    if (error) {\r\n      showForgotPassError('Error: ' + error.message);\r\n      return;\r\n    }\r\n\r\n    // Success message\r\n  \r\n    // Show the popup if the email was sent successfully\r\n    showPopup();\r\n\r\n  } catch (error) {\r\n    showForgotPassError('Something went wrong. Please try again later.');\r\n  }\r\n});"],"names":[],"version":3,"file":"forgotPass.768dd1d4.js.map","sourceRoot":"/__parcel_source_root/"}